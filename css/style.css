@-webkit-keyframes moveInLeft {
  0% {
    opacity: 0;
    -webkit-transform: translateX(-10rem);
            transform: translateX(-10rem);
  }
  80% {
    -webkit-transform: translateX(1rem);
            transform: translateX(1rem);
  }
  100% {
    opacity: 1;
    -webkit-transform: translateX(0);
            transform: translateX(0);
  }
}

@keyframes moveInLeft {
  0% {
    opacity: 0;
    -webkit-transform: translateX(-10rem);
            transform: translateX(-10rem);
  }
  80% {
    -webkit-transform: translateX(1rem);
            transform: translateX(1rem);
  }
  100% {
    opacity: 1;
    -webkit-transform: translateX(0);
            transform: translateX(0);
  }
}

@-webkit-keyframes moveInRight {
  0% {
    opacity: 0;
    -webkit-transform: translateX(10rem);
            transform: translateX(10rem);
  }
  80% {
    -webkit-transform: translateX(-1rem);
            transform: translateX(-1rem);
  }
  100% {
    opacity: 1;
    -webkit-transform: translateX(0);
            transform: translateX(0);
  }
}

@keyframes moveInRight {
  0% {
    opacity: 0;
    -webkit-transform: translateX(10rem);
            transform: translateX(10rem);
  }
  80% {
    -webkit-transform: translateX(-1rem);
            transform: translateX(-1rem);
  }
  100% {
    opacity: 1;
    -webkit-transform: translateX(0);
            transform: translateX(0);
  }
}

@-webkit-keyframes moveInBottom {
  0% {
    opacity: 0;
    -webkit-transform: translateY(3rem);
            transform: translateY(3rem);
  }
  100% {
    opacity: 1;
    -webkit-transform: translate(0);
            transform: translate(0);
  }
}

@keyframes moveInBottom {
  0% {
    opacity: 0;
    -webkit-transform: translateY(3rem);
            transform: translateY(3rem);
  }
  100% {
    opacity: 1;
    -webkit-transform: translate(0);
            transform: translate(0);
  }
}

*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  -webkit-box-sizing: inherit;
          box-sizing: inherit;
  text-decoration: none;
  list-style: none;
}

html {
  font-size: 62.5%;
}

body {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
}

body {
  font-family: "Lato", sans-serif;
  font-weight: 400;
  line-height: 1.7;
  color: #777;
  padding: 3rem;
}

.heading-primary {
  color: #fff;
  text-transform: uppercase;
  -webkit-backface-visibility: hidden;
          backface-visibility: hidden;
  margin-bottom: 6rem;
}

.heading-primary--main {
  display: block;
  font-size: 6rem;
  font-weight: 400;
  letter-spacing: 3.5rem;
  -webkit-animation: moveInLeft 1000ms ease-out;
          animation: moveInLeft 1000ms ease-out;
}

.heading-primary--sub {
  display: block;
  font-size: 2rem;
  font-weight: 700;
  letter-spacing: 1.75rem;
  -webkit-animation: moveInRight 1000ms ease-out;
          animation: moveInRight 1000ms ease-out;
}

.heading-secondary {
  -webkit-transition: all 200ms 50ms;
  transition: all 200ms 50ms;
  font-size: 3.5rem;
  text-transform: uppercase;
  font-weight: 700;
  background-image: -webkit-gradient(linear, left top, right top, from(#7ed56f), to(#28b485));
  background-image: linear-gradient(to right, #7ed56f, #28b485);
  display: inline-block;
  background-clip: text;
  -webkit-background-clip: text;
  color: transparent;
  letter-spacing: 2px;
}

.heading-secondary:hover {
  -webkit-transform: skewY(2deg) skewX(15deg) scale(1.1);
          transform: skewY(2deg) skewX(15deg) scale(1.1);
  text-shadow: 0.5rem 1rem 2rem rgba(0, 0, 0, 0.2);
}

.heading-tertiary {
  font-size: 1.6rem;
  font-weight: 700;
  text-transform: uppercase;
}

/*yes use last-child so there is margin between last paragraph and the button*/
.paragraph {
  font-size: 1.6rem;
}

.paragraph:not(:last-child) {
  margin-bottom: 3rem;
}

.u-center-text {
  text-align: center !important;
}

.u-margin-top-big {
  margin-top: 8rem !important;
}

.u-margin-top-huge {
  margin-top: 10rem !important;
}

.u-margin-bottom-big {
  margin-bottom: 8rem !important;
}

@media (max-width: 56.25em) {
  .u-margin-bottom-big {
    margin-bottom: 5rem !important;
  }
}

.u-margin-bottom-medium {
  margin-bottom: 4rem !important;
}

@media (max-width: 56.25em) {
  .u-margin-bottom-medium {
    margin-bottom: 3rem !important;
  }
}

.u-margin-bottom-small {
  margin-bottom: 1.5rem !important;
}

.btn:link, .btn:visited, .btn {
  -webkit-transition: -webkit-transform 200ms 50ms;
  transition: -webkit-transform 200ms 50ms;
  transition: transform 200ms 50ms;
  transition: transform 200ms 50ms, -webkit-transform 200ms 50ms;
  text-transform: uppercase;
  display: inline-block;
  padding: 1.5rem 4rem;
  border-radius: 99em;
  font-size: 1.6rem;
  position: relative;
}

.btn:hover {
  -webkit-box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2);
          box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2);
  -webkit-transform: translateY(-3px);
          transform: translateY(-3px);
}

.btn:active {
  -webkit-transform: translateY(-1px);
          transform: translateY(-1px);
  -webkit-box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.2);
          box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.2);
}

.btn--white {
  background-color: #fff;
  color: #777;
}

.btn--white::after {
  background-color: #fff;
}

.btn::after {
  content: "";
  -webkit-transition: all 400ms 50ms;
  transition: all 400ms 50ms;
  display: inline-block;
  height: 100%;
  width: 100%;
  border-radius: 99em;
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;
}

.btn:hover::after {
  -webkit-transform: scale(1.4, 1.6);
          transform: scale(1.4, 1.6);
  opacity: 0;
}

.btn--animated {
  -webkit-animation: moveInBottom 500ms ease-out 750ms;
          animation: moveInBottom 500ms ease-out 750ms;
}

.btn-text:link, .btn-text:visited {
  color: #55c57a;
  display: inline-block;
  border-bottom: 1px solid #55c57a;
  padding: 3px;
  font-size: 1.6rem;
  -webkit-transition: all 200ms ease-out 50ms;
  transition: all 200ms ease-out 50ms;
}

.btn-text:hover {
  background-color: #55c57a;
  color: #fff;
  -webkit-box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.15);
          box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.15);
  -webkit-transform: translateY(-2px);
          transform: translateY(-2px);
}

.btn-text:active {
  -webkit-box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
          box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
}

.card {
  -webkit-transition: -webkit-transform 1200ms ease-out;
  transition: -webkit-transform 1200ms ease-out;
  transition: transform 1200ms ease-out;
  transition: transform 1200ms ease-out, -webkit-transform 1200ms ease-out;
}

.card__side {
  -webkit-transition: all 800ms ease;
  transition: all 800ms ease;
}

.composition {
  position: relative;
}

.composition__photo {
  -webkit-transition: all 200ms;
  transition: all 200ms;
  -webkit-box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.4);
          box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.4);
  width: 55%;
  border-radius: 2px;
  position: absolute;
  z-index: 10;
  outline-offset: 2rem;
}

.composition__photo--p1 {
  left: 0;
  top: -2rem;
}

.composition__photo--p2 {
  right: 0;
  top: 2rem;
}

.composition__photo--p3 {
  left: 20%;
  top: 10rem;
}

.composition__photo:hover {
  -webkit-box-shadow: 0 2.5rem 4rem rgba(0, 0, 0, 0.5);
          box-shadow: 0 2.5rem 4rem rgba(0, 0, 0, 0.5);
  -webkit-transform: scale(1.05);
          transform: scale(1.05);
  z-index: 20;
  outline: 1.5rem solid #55c57a;
}

.composition:hover .composition__photo:not(:hover) {
  -webkit-transform: scale(0.95) translateY(-0.5rem);
          transform: scale(0.95) translateY(-0.5rem);
}

.feature-box {
  -webkit-transition: -webkit-transform 300ms;
  transition: -webkit-transform 300ms;
  transition: transform 300ms;
  transition: transform 300ms, -webkit-transform 300ms;
  -webkit-box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.15);
          box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.15);
}

.form__input {
  -webkit-transition: all 300ms;
  transition: all 300ms;
}

.form__label {
  -webkit-transition: all 300ms;
  transition: all 300ms;
}

.popup {
  -webkit-transition: all 300ms;
  transition: all 300ms;
}

.popup__content {
  -webkit-box-shadow: 0 2rem 4rem rgba(0, 0, 0, 0.2);
          box-shadow: 0 2rem 4rem rgba(0, 0, 0, 0.2);
  -webkit-transition: all 500ms 200ms;
  transition: all 500ms 200ms;
}

.popup__close:link, .popup__close:visited {
  color: #777;
  -webkit-transition: all 200ms;
  transition: all 200ms;
}

.story {
  font-size: 1.6rem;
  -webkit-box-shadow: 0 3rem 6rem rgba(0, 0, 0, 0.1);
          box-shadow: 0 3rem 6rem rgba(0, 0, 0, 0.1);
  background-color: rgba(255, 255, 255, 0.6);
}

.story__caption {
  -webkit-transition: all 500ms;
  transition: all 500ms;
}

.footer__link:link, .footer__link:visited {
  -webkit-transition: all 200ms;
  transition: all 200ms;
}

[class^="row"] {
  max-width: 114rem;
  margin: 0 auto;
}

.row-first, .row-sixth {
  display: grid;
  grid-template-columns: 1fr 1fr;
  grid-column-gap: 2rem;
}

.row-second {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  grid-column-gap: 6rem;
}

.row-third {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  grid-column-gap: 6rem;
}

.row-fourth + .row-fourth {
  margin-top: 6rem;
}

/*

[class^="row"] {
    max-width: $grid-width;
    margin: 0 auto;
}

.row-first, .row-sixth {
    display: grid;
    grid-template-columns: 1fr 1fr;
    grid-column-gap: 2rem;
}

.row-second {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    grid-column-gap: 6rem;
}

.row-third {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    grid-column-gap: 6rem;
}

.row-fourth {
    
    & + & {
        margin-top: 6rem;
    }
}


*/
.header {
  height: 95vh;
  background-image: -webkit-gradient(linear, left top, right bottom, from(rgba(126, 213, 111, 0.8)), to(rgba(40, 180, 133, 0.8))), url(../img/hero.jpg);
  background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)), url(../img/hero.jpg);
  background-size: cover;
  background-position: top;
  -webkit-clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
          clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
  position: relative;
}

.header__logo-box {
  position: absolute;
  top: 4rem;
  left: 4rem;
}

.header__logo {
  height: 3.5rem;
}

.header__text-box {
  position: absolute;
  top: 40%;
  left: 50%;
  -webkit-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
  text-align: center;
}

.navigation__button {
  -webkit-box-shadow: 0 1rem 3rem rgba(0, 0, 0, 0.1);
          box-shadow: 0 1rem 3rem rgba(0, 0, 0, 0.1);
}

.navigation__link:link, .navigation__link:visited {
  -webkit-transition: all 400ms;
  transition: all 400ms;
}

.navigation__icon::before, .navigation__icon::after {
  content: "";
  -webkit-transition: all 200ms;
  transition: all 200ms;
}

.section-about {
  background-color: #f7f7f7;
  margin-top: -20rem;
  padding: 25rem 0;
}

.book {
  -webkit-box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.15);
          box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.15);
}

.bttBtn:hover {
  background-color: #fff;
  padding: 1em 3em;
}

.bttBtn.visible {
  opacity: 1;
  visibility: visible;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
